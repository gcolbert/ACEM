<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns:b="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- HTTP security configurations -->
	<http use-expressions="true" auto-config='true' disable-url-rewriting="false">
		<!-- For Spring Security 4.x, we need to disable csrf, otherwise AJAX requests get 403:-->
		<csrf disabled="true"/>
		<intercept-url access="permitAll" pattern="/" /><!-- To permit "/" allows the use of web.xml's <welcome-file> -->
		<intercept-url access="permitAll" pattern="/home" />
		<intercept-url access="permitAll" pattern="/pages/exceptions/**" />
		<intercept-url access="permitAll" pattern="/javax.faces.resource/**" />
		<intercept-url access="permitAll" pattern="/resources/**" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/administration/**" />
		<intercept-url access="isAuthenticated()" pattern="/**" />
		<logout logout-url="/logout" logout-success-url='/home' />
	</http>

	<!-- Configure Authentication mechanism -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authProvider" />
	</authentication-manager>

	<b:bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<b:bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<b:property name="userDetailsService">
			<b:bean class="eu.ueb.acem.services.auth.DaoUserDetailsService"/>
		</b:property>
		<b:property name="passwordEncoder" ref="bcryptEncoder" />
	</b:bean>

</b:beans>
