<?xml version="1.0" encoding="UTF-8" ?>
<ui:composition xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:e="http://commons.esup-portail.org"
	template="../templates/template.xhtml">
	<ui:define name="content">
		<ui:debug hotkey="1"
			rendered="#{facesContext.application.projectStage == 'Development'}" />
		<p:tooltip />
		<h:form id="formTree">
			<p:panel header="#{msgs['NEEDS_AND_ANSWERS.TREE.HEADER']}">

				<p:growl id="messages" showDetail="true" />

				<p:contextMenu for="needsAndAnswersTree" nodeType="default">
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.ASSOCIATE_NEED']}"
						update="needsAndAnswersTree :formTree:messages"
						action="#{needsAndAnswersTreeController.associateNeedWithSelectedNode}"
						icon="ui-icon-plus" />
				</p:contextMenu>
				<p:contextMenu for="needsAndAnswersTree"
					nodeType="#{needsAndAnswersTreeController.treeNodeType_NEED_LEAF}">
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.VIEW_INFORMATION']}"
						update=":formTree:messages"
						action="#{needsAndAnswersTreeController.displaySelectedNodeInfo}"
						icon="ui-icon-search" />
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.ASSOCIATE_NEED']}"
						update="needsAndAnswersTree :formTree:messages"
						action="#{needsAndAnswersTreeController.associateNeedWithSelectedNode}"
						icon="ui-icon-plus" />
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.ASSOCIATE_ANSWER']}"
						update="needsAndAnswersTree :formTree:messages"
						action="#{needsAndAnswersTreeController.associateAnswerWithSelectedNode}"
						icon="ui-icon-plus" />
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.DELETE_NODE']}"
						update="needsAndAnswersTree :formTree:messages"
						action="#{needsAndAnswersTreeController.deleteSelectedNode}"
						icon="ui-icon-close" />
				</p:contextMenu>
				<p:contextMenu for="needsAndAnswersTree"
					nodeType="#{needsAndAnswersTreeController.treeNodeType_NEED_WITH_ASSOCIATED_NEEDS}">
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.VIEW_INFORMATION']}"
						update=":formTree:messages"
						action="#{needsAndAnswersTreeController.displaySelectedNodeInfo}"
						icon="ui-icon-search" />
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.ASSOCIATE_NEED']}"
						update="needsAndAnswersTree :formTree:messages"
						action="#{needsAndAnswersTreeController.associateNeedWithSelectedNode}"
						icon="ui-icon-plus" />
				</p:contextMenu>
				<p:contextMenu for="needsAndAnswersTree"
					nodeType="#{needsAndAnswersTreeController.treeNodeType_NEED_WITH_ASSOCIATED_ANSWERS}">
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.VIEW_INFORMATION']}"
						update=":formTree:messages"
						action="#{needsAndAnswersTreeController.displaySelectedNodeInfo}"
						icon="ui-icon-search" />
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.ASSOCIATE_ANSWER']}"
						update="needsAndAnswersTree :formTree:messages"
						action="#{needsAndAnswersTreeController.associateAnswerWithSelectedNode}"
						icon="ui-icon-plus" />
				</p:contextMenu>
				<p:contextMenu for="needsAndAnswersTree"
					nodeType="#{needsAndAnswersTreeController.treeNodeType_ANSWER_LEAF}">
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.VIEW_INFORMATION']}"
						update=":formTree:messages"
						action="#{needsAndAnswersTreeController.displaySelectedNodeInfo}"
						icon="ui-icon-search" />
					<p:menuitem
						value="#{msgs['NEEDS_AND_ANSWERS.TREE.CONTEXT_MENU.DELETE_NODE']}"
						update="needsAndAnswersTree :formTree:messages"
						action="#{needsAndAnswersTreeController.deleteSelectedNode}"
						icon="ui-icon-trash" />
				</p:contextMenu>

				<p:tree id="needsAndAnswersTree" dynamic="true"
					value="#{needsAndAnswersTreeController.treeRoot}"
					var="treeNodeData" selectionMode="single"
					selection="#{needsAndAnswersTreeController.selectedNode}"
					draggable="true" droppable="true" dragdropScope="demo"
					update="contextMenuForNeeds">
					<p:ajax event="dragdrop"
						listener="#{needsAndAnswersTreeController.onDragDrop}"
						update="needsAndAnswersTree :formTree:messages" />
					<p:treeNode type="default" styleClass="#{treeNodeData.styleClass}">
						<h:outputText value="#{treeNodeData.label}" />
					</p:treeNode>
					<p:treeNode
						type="#{needsAndAnswersTreeController.treeNodeType_NEED_LEAF}"
						styleClass="#{treeNodeData.styleClass}">
						<p:inplace editor="true" event="dblclick">
							<p:ajax event="save"
								listener="#{needsAndAnswersTreeController.onLabelSave(treeNodeData)}"
								update="@this" />
							<p:inputText value="#{treeNodeData.label}" />
						</p:inplace>
					</p:treeNode>
					<p:treeNode
						type="#{needsAndAnswersTreeController.treeNodeType_NEED_WITH_ASSOCIATED_NEEDS}"
						styleClass="#{treeNodeData.styleClass}">
						<p:inplace editor="true" event="dblclick">
							<p:ajax event="save"
								listener="#{needsAndAnswersTreeController.onLabelSave(treeNodeData)}"
								update="@this" />
							<p:inputText value="#{treeNodeData.label}" />
						</p:inplace>
					</p:treeNode>
					<p:treeNode
						type="#{needsAndAnswersTreeController.treeNodeType_NEED_WITH_ASSOCIATED_ANSWERS}"
						styleClass="#{treeNodeData.styleClass}">
						<p:inplace editor="true" event="dblclick">
							<p:ajax event="save"
								listener="#{needsAndAnswersTreeController.onLabelSave(treeNodeData)}"
								update="@this" />
							<p:inputText value="#{treeNodeData.label}" />
						</p:inplace>
					</p:treeNode>
					<p:treeNode
						type="#{needsAndAnswersTreeController.treeNodeType_ANSWER_LEAF}"
						styleClass="#{treeNodeData.styleClass}">
						<p:inplace editor="true" event="dblclick">
							<p:ajax event="save"
								listener="#{needsAndAnswersTreeController.onLabelSave(treeNodeData)}"
								update="@this" />
							<p:inputText value="#{treeNodeData.label}" />
						</p:inplace>
						<p:commandLink
							oncomplete="PrimeFaces.scrollTo('formTable')"
							action="#{needsAndAnswersTableController.setSelectedAnswer(treeNodeData.id)}"
							update=":formTable">
							<h:outputText
								id="viewScenariosBtn"
								styleClass="ui-icon ui-icon-lightbulb"
								style="display:inline-block; vertical-align:middle;" />
							<p:tooltip value="#{msgs['NEEDS_AND_ANSWERS.TREE.ANSWER.VIEW_SCENARIOS_EXAMPLES']}" for="viewScenariosBtn"/>
						</p:commandLink>
						<h:link outcome="ressources">
							<f:param name="resourceId" value="#{treeNodeData.id}" />
							<h:outputText id="goToResourceBtn"
								styleClass="ui-icon ui-icon-arrowthickstop-1-e"
								style="display:inline-block; vertical-align:middle;" />
							<p:tooltip value="#{msgs['NEEDS_AND_ANSWERS.TREE.ANSWER.GO_TO_RESOURCE']}" for="goToResourceBtn"/>
						</h:link>
						<h:link value="Go to next page" outcome="ressources" />
					</p:treeNode>
				</p:tree>

			</p:panel>
		</h:form>

		<h:form id="formTable">
			<p:outputPanel id="examplesOfScenariosPanel">
				<p:panel header="#{msgs['NEEDS_AND_ANSWERS.SCENARIOS_EXAMPLES.HEADER']} «#{needsAndAnswersTableController.selectedAnswer.name}»"
						rendered="#{needsAndAnswersTableController.selectedAnswer != null}">
					<p:dataTable
						id="examplesOfScenariosTable"
						value="#{needsAndAnswersTableController.scenariosRelatedToSelectedAnswer}"
						var="tableEntry">
						<p:column
							headerText="#{msgs['NEEDS_AND_ANSWERS.SCENARIOS_EXAMPLES.COLUMNS.TITLE']}">
							<h:outputText value="#{tableEntry.title}" />
						</p:column>
						<p:column
							headerText="#{msgs['NEEDS_AND_ANSWERS.SCENARIOS_EXAMPLES.COLUMNS.AUTHOR']}">
							<h:outputText value="#{tableEntry.author}" />
						</p:column>
						<p:column
							headerText="#{msgs['NEEDS_AND_ANSWERS.SCENARIOS_EXAMPLES.COLUMNS.RESOURCES']}">
							<h:outputText value="#{tableEntry.resources}" />
						</p:column>
					</p:dataTable>
				</p:panel>
			</p:outputPanel>
		</h:form>
	</ui:define>
</ui:composition>