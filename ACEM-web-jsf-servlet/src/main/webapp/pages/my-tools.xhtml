<?xml version="1.0" encoding="UTF-8" ?>
<ui:composition xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:e="http://commons.esup-portail.org"
	template="../templates/template.xhtml">
	<f:metadata>
		<f:viewParam name="toolCategoryId"
			value="#{resourcesController.selectedToolCategoryId}" />
	</f:metadata>
	<ui:define name="content">
		<ui:debug hotkey="1"
			rendered="#{facesContext.application.projectStage == 'Development'}" />

		<h:form id="formResources">
			<p:panel header="#{msgs['RESOURCES.TREE.HEADER']}">

				<p:growl id="messagesDisplayer" showDetail="true" />

				<p:contextMenu for="resourcesTree" nodeType="default">
					<p:menuitem
						value="#{msgs['RESOURCES.TREE.CONTEXT_MENU.CREATE_RESOURCE']}"
						update=":formCreateResource"
						oncomplete="PF('dialogCreateResource').show()" icon="ui-icon-plus">
						<p:resetInput target=":formCreateResource" />
					</p:menuitem>
				</p:contextMenu>
				<p:contextMenu for="resourcesTree" nodeType="CategoryNode">
					<p:menuitem
						value="#{msgs['RESOURCES.TREE.CONTEXT_MENU.CREATE_RESOURCE']}"
						update=":formCreateResource"
						oncomplete="PF('dialogCreateResource').show()" icon="ui-icon-plus">
						<p:resetInput target=":formCreateResource" />
					</p:menuitem>
				</p:contextMenu>
				<!-- 
				<p:contextMenu for="resourcesTree" nodeType="ResourceNode">
					<p:menuitem
						value="#{msgs['RESOURCES.TREE.CONTEXT_MENU.ASSOCIATE_USE_MODE']}"
						update=":formAssociateUseMode"
						oncomplete="PF('dialogAssociateUseMode').show()" icon="ui-icon-plus">
						<p:resetInput target=":formAssociateUseMode" />
					</p:menuitem>
				</p:contextMenu>
				-->

				<p:panelGrid styleClass="menu" columns="5">
					<p:commandLink styleClass="menu-entry"
						action="#{resourcesController.prepareTree('equipment')}"
						update=":formResources:resourcesTree">
						<h:graphicImage
							url="resources/images/my-tools/my-tools.equipments.png"
							alt="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.EQUIPMENT.LABEL']}"
							styleClass="menu-entry-image" />
						<span class="menu-entry-text"><h:outputText
								value="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.EQUIPMENT.LABEL']}" /></span>
					</p:commandLink>
					<p:commandLink styleClass="menu-entry"
						action="#{resourcesController.prepareTree('software')}"
						update=":formResources:resourcesTree">
						<h:graphicImage
							url="resources/images/my-tools/my-tools.softwares.png"
							alt="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.SOFTWARE.LABEL']}"
							styleClass="menu-entry-image" />
						<span class="menu-entry-text"><h:outputText
								value="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.SOFTWARE.LABEL']}" /></span>
					</p:commandLink>
					<p:commandLink styleClass="menu-entry"
						action="#{resourcesController.prepareTree('softwareDocumentation')}"
						update=":formResources:resourcesTree">
						<h:graphicImage
							url="resources/images/my-tools/my-tools.software-documentations.png"
							alt="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.SOFTWARE_DOCUMENTATION.LABEL']}"
							styleClass="menu-entry-image" />
						<span class="menu-entry-text"><h:outputText
								value="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.SOFTWARE_DOCUMENTATION.LABEL']}" /></span>
					</p:commandLink>
					<p:commandLink styleClass="menu-entry"
						action="#{resourcesController.prepareTree('pedagogicalAndDocumentaryResources')}"
						update=":formResources:resourcesTree">
						<h:graphicImage
							url="resources/images/my-tools/my-tools.pedagogical-and-documentary-resources.png"
							alt="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.PEDAGOGICAL_AND_DOCUMENTARY_RESOURCES.LABEL']}"
							styleClass="menu-entry-image" />
						<span class="menu-entry-text"><h:outputText
								value="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.PEDAGOGICAL_AND_DOCUMENTARY_RESOURCES.LABEL']}" /></span>
					</p:commandLink>
					<p:commandLink styleClass="menu-entry"
						action="#{resourcesController.prepareTree('professionalTraining')}"
						update=":formResources:resourcesTree">
						<h:graphicImage
							url="resources/images/my-tools/my-tools.professional-trainings.png"
							alt="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.PROFESSIONAL_TRAININGS.LABEL']}"
							styleClass="menu-entry-image" />
						<span class="menu-entry-text"><h:outputText
								value="#{msgs['RESOURCES.TREE.VISIBLE_ROOTS.PROFESSIONAL_TRAININGS.LABEL']}" /></span>
					</p:commandLink>
				</p:panelGrid>

				<p:tree id="resourcesTree" dynamic="true"
					datakey="#{treeNodeData.id}"
					value="#{resourcesController.resourcesTreeRoot}" var="treeNodeData"
					selectionMode="single"
					onNodeClick="if ( (node.attr('data-nodetype')!='default') &amp;&amp; (node.attr('data-nodetype')!='category') ) { history.pushState('','','my-tools?toolCategoryId='+node.attr('data-datakey')); }"
					selection="#{resourcesController.selectedNode}">
					<p:ajax event="select"
						update=":formSelectedToolCategory:selectedToolCategoryPanel :formResources:messagesDisplayer"
						listener="#{resourcesController.onNodeSelect}" />
					<p:treeNode type="default" styleClass="#{treeNodeData.styleClass}">
						<h:outputText value="#{treeNodeData.label}" />
					</p:treeNode>
					<p:treeNode type="CategoryNode"
						styleClass="#{treeNodeData.styleClass}">
						<h:outputText value="#{treeNodeData.label}" />
					</p:treeNode>
					<p:treeNode type="ResourceNode"
						styleClass="#{treeNodeData.styleClass}">
						<h:outputText value="#{treeNodeData.label}" />
					</p:treeNode>
				</p:tree>
			</p:panel>
		</h:form>

		<h:form id="formSelectedToolCategory">
			<p:panel header="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.HEADER']}"
				id="selectedToolCategoryPanel">
				<p:panelGrid columns="1"
					rendered="#{resourcesController.selectedToolCategoryViewBean != null}">

					<p:row>
						<h:outputText styleClass="title"
							value="#{resourcesController.selectedToolCategoryViewBean.name}" />
						<p:graphicImage id="resourceIcon"
							rendered="#{not empty resourcesController.selectedToolCategoryViewBean.iconFileName}"
							styleClass="resourceLogo" alt="#{resourcesController.selectedToolCategoryViewBean.name}"
							cache="false" width="80"
							value="#{imagesController.getImage()}">
							<f:param name="imageFileName"
								value="#{resourcesController.selectedToolCategoryViewBean.iconFileName}" />
						</p:graphicImage>
						<h:panelGroup styleClass="favoriteToolCategory">
							<p:outputLabel for="favoriteToolCategoryCheckbox"
								value="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.ADD_TO_MY_FAVORITE_TOOLS']}" />
							<p:selectBooleanCheckbox id="favoriteToolCategoryCheckbox" styleClass="favoriteToolCategoryCheckbox"
								value="#{resourcesController.selectedToolCategoryViewBean.favoriteToolCategory}">
								<p:ajax update="@this :formSelectedToolCategory:favoriteToolCategoriesPanel :formResources:messagesDisplayer"
									listener="#{usersController.toggleFavoriteToolCategoryForCurrentUser(resourcesController.selectedToolCategoryViewBean)}" />
							</p:selectBooleanCheckbox>
						</h:panelGroup>
					</p:row>
					
					<p:panel>
						<p:panelGrid columns="2">
							<h:outputLabel for="selectedToolCategoryDescription"
								value="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.DESCRIPTION']}"
								styleClass="label" />
							<p:inplace id="selectedToolCategoryDescription" editor="true">
								<p:ajax event="save" listener="#{resourcesController.onSelectedToolCategorySave}" update="@this" />
								<p:ajax event="cancel" update="@this" />
								<h:inputText id="selectedScenarioName"
									value="#{resourcesController.selectedToolCategoryViewBean.domainBean.description}"
									required="true" requiredMessage="#{msgs['REQUIRED_FIELD']}" />
							</p:inplace>
						</p:panelGrid>

						<!--
						<h:outputText id="selectedToolCategoryDescription" value="#{resourcesController.selectedToolCategoryViewBean.description}" />
						-->
						<!-- 
						<p:commandButton 
							value="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.DESCRIPTION.MODIFY_DESCRIPTION_LABEL']}"
							icon="ui-icon-check" validateClient="true"
							action="#{resourcesController.createResourceForSelectedResourceType(input1.value, input2.value, fileUploadController.uploadedFileName)}"
							process="@this"
							update="@form :formResources:resourcesTree"
							oncomplete="if (args &amp;&amp; !args.validationFailed) { dialogCreateResource.hide(); }" />
						 -->
					</p:panel>
					
					<p:dataTable var="toolViewBean" value="#{resourcesController.selectedToolCategoryViewBean.resourceViewBeans}">
						<p:column
							headerText="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.TOOLS.COLUMN_HEADER.TOOL_NAME']}">
							<h:outputText value="#{toolViewBean.name}"/>
						</p:column>
						<p:column
							headerText="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.TOOLS.COLUMN_HEADER.ORGANISATION_NAME']}">
							<h:outputText value="Exemple : Rennes1/Droit (prÃ©-requis : lier un outil et une organisation)"/>
						</p:column>
					</p:dataTable>

					<p:outputLabel
						value="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.ASSOCIATED_PEDAGOGICAL_ADVICE_LABEL']}"
						for="pedagogicalUsesTree" />
					<p:tree id="pedagogicalUsesTree" dynamic="true"
						value="#{resourcesController.pedagogicalUsesTreeRoot}"
						var="treeNodeData">
						<p:treeNode type="default" styleClass="#{treeNodeData.styleClass}">
							<h:outputText value="#{treeNodeData.label}" />
						</p:treeNode>
						<p:treeNode
							type="#{needsAndAnswersController.treeNodeType_NEED_LEAF}"
							styleClass="#{treeNodeData.styleClass}">
							<h:outputText value="#{treeNodeData.label}" />
						</p:treeNode>
						<p:treeNode
							type="#{needsAndAnswersController.treeNodeType_NEED_WITH_ASSOCIATED_NEEDS}"
							styleClass="#{treeNodeData.styleClass}">
							<h:outputText value="#{treeNodeData.label}" />
						</p:treeNode>
						<p:treeNode
							type="#{needsAndAnswersController.treeNodeType_NEED_WITH_ASSOCIATED_ANSWERS}"
							styleClass="#{treeNodeData.styleClass}">
							<h:outputText value="#{treeNodeData.label}" />
						</p:treeNode>
						<p:treeNode
							type="#{needsAndAnswersController.treeNodeType_ANSWER_LEAF}"
							styleClass="#{treeNodeData.styleClass}">
							<h:outputText value="#{treeNodeData.label}" />
						</p:treeNode>
					</p:tree>

					<p:outputLabel
						value="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.SCENARIOS_USING_SELECTED_TOOL_CATEGORY_LABEL']}"
						for="scenariosUsingSelectedToolCategoryTable" />

					<p:dataTable id="scenariosUsingSelectedToolCategoryTable"
						value="#{resourcesController.scenariosUsingSelectedToolCategory}"
						var="scenario">
						<p:column
							headerText="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.SCENARIOS.COLUMNS.TITLE']}">
							<h:outputText value="#{scenario.name}" />
						</p:column>
						<p:column
							headerText="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.SCENARIOS.COLUMNS.OBJECTIVE']}">
							<h:outputText value="#{scenario.objective}" />
						</p:column>
						<p:column
							headerText="#{msgs['RESOURCES.SELECTED_RESOURCE_CATEGORY.SCENARIOS.COLUMNS.AUTHOR']}">
							<h:outputText value="#{scenario.author}" />
						</p:column>
					</p:dataTable>

				</p:panelGrid>
			</p:panel>

			<p:panelGrid styleClass="bottom-toolboxes">
				<p:row>
					<p:column width="100%">
						<p:panel id="favoriteToolCategoriesPanel"
							header="#{msgs['RESOURCES.MY_FAVORITE_TOOL_CATEGORIES.HEADER']}">
							<ui:repeat id="favoriteToolCategories"
								value="#{sessionController.currentUserViewBean.favoriteToolCategoryViewBeans}"
								var="toolCategoryViewBean">
								<h:outputLink id="goToToolCategoryBtn" outcome="my-tools">
									<f:param name="toolCategoryId" value="#{toolCategoryViewBean.id}" />
									<h:outputText value="#{toolCategoryViewBean.name}" rendered="#{empty toolCategoryViewBean.iconFileName}"/>
									<p:graphicImage id="favoriteToolCategoryIcon"
										rendered="#{not empty toolCategoryViewBean.iconFileName}"
										styleClass="toolCategoryLogo" alt="#{toolCategoryViewBean.name}"
										cache="false" width="50"
										value="#{imagesController.getImage()}">
										<f:param name="imageFileName"
											value="#{toolCategoryViewBean.iconFileName}" />
									</p:graphicImage>
								</h:outputLink>
								<p:tooltip for="goToToolCategoryBtn" value="#{toolCategoryViewBean.name}"/>
							</ui:repeat>
						</p:panel>
					</p:column>
					<p:column width="50%">
						<p:panel
							header="#{msgs['RESOURCES.LAST_VIEWED_TOOL_CATEGORIES.HEADER']}">
						</p:panel>
					</p:column>
				</p:row>
 			</p:panelGrid>

		</h:form>

		<p:dialog id="idDialogCreateResource"
			header="#{msgs['RESOURCES.CREATE_RESOURCE_MODAL_WINDOW.HEADER']}"
			widgetVar="dialogCreateResource" modal="true" height="auto">
			<h:form id="formCreateResource">
				<p:panelGrid columns="3">
					<h:outputLabel for="categoryForTheNewResource"
						value="#{msgs['RESOURCES.CREATE_RESOURCE_MODAL_WINDOW.CATEGORY_LABEL']}" />
					<p:selectOneMenu id="categoryForTheNewResource" required="true"
						requiredMessage="#{msgs['REQUIRED_FIELD']}" editable="false"
						binding="#{input1}" converter="ResourceCategoryConverter">
						<f:selectItem
							itemLabel="#{msgs['RESOURCES.CREATE_RESOURCE_MODAL_WINDOW.SELECT_CATEGORY']}"
							itemValue="" itemDisabled="true" noSelectionOption="true" />
						<f:selectItems
							value="#{resourcesController.allCategoryViewBeans}"
							var="categoryViewBean" itemLabel="#{categoryViewBean.domainBean.name}"
							itemValue="#{categoryViewBean.domainBean}" />
					</p:selectOneMenu>
					<p:message for="categoryForTheNewResource" display="text" />

					<h:outputLabel for="newSoftwareName"
						value="#{msgs['RESOURCES.CREATE_RESOURCE_MODAL_WINDOW.NAME_LABEL']}" />
					<p:inputText id="newSoftwareName" required="true"
						requiredMessage="#{msgs['REQUIRED_FIELD']}" size="50"
						binding="#{input2}" />
					<p:message for="newSoftwareName" display="text" />

					<h:outputLabel
						value="#{msgs['RESOURCES.CREATE_RESOURCE_MODAL_WINDOW.ICON_LABEL']}"
						for="icon" />
					<p:column rowspan="2">
						<p:fileUpload fileUploadListener="#{fileUploadController.upload}"
							sizeLimit="300000" label="#{msgs['FILEUPLOAD.CHOOSE_LABEL']}"
							uploadLabel="#{msgs['FILEUPLOAD.UPLOAD_LABEL']}"
							cancelLabel="#{msgs['FILEUPLOAD.CANCEL_LABEL']}" fileLimit="1"
							allowTypes="/(\.|\/)(gif|jpe?g|png)$/" process="@this"
							update="icon :formResources:messagesDisplayer" />
						<p:panel id="icon">
							<p:graphicImage
								rendered="#{(not empty resourcesController.selectedResourceViewBean.iconFileName) and (empty fileUploadController.uploadedFileName)}"
								alt="#{resourcesController.selectedResourceViewBean.name}"
								cache="false" width="200" value="#{imagesController.image}">
								<f:param name="imageFileName"
									value="#{resourcesController.selectedResourceViewBean.iconFileName}" />
							</p:graphicImage>
							<p:graphicImage
								rendered="#{not empty fileUploadController.uploadedFileName}"
								alt="#{resourcesController.selectedResourceViewBean.name}"
								cache="false" width="200" value="#{imagesController.image}">
								<f:param name="imageFileName"
									value="#{fileUploadController.uploadedFileName}" />
							</p:graphicImage>
						</p:panel>
					</p:column>

				</p:panelGrid>
				<p:commandButton styleClass="dialogValidationButton"
					value="#{msgs['RESOURCES.CREATE_SCENARIO_MODAL_WINDOW.VALIDATE']}"
					icon="ui-icon-check" validateClient="true"
					action="#{resourcesController.createResourceForSelectedResourceType(input1.value, input2.value, fileUploadController.uploadedFileName)}"
					process="@this"
					update="@form :formResources:resourcesTree"
					oncomplete="if (args &amp;&amp; !args.validationFailed) { dialogCreateResource.hide(); }" />
			</h:form>
		</p:dialog>

		<p:dialog id="dialogAssociateUseModeId"
			header="#{msgs['RESOURCES.ASSOCIATE_USE_MODE_MODAL_WINDOW.HEADER']}"
			widgetVar="dialogAssociateUseMode" modal="true" height="auto">
			<h:form id="formAssociateUseMode">
			

			</h:form>
		</p:dialog>

	</ui:define>
</ui:composition>